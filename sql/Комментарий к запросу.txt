Схема базы данных приведена в файле db_schema.jpg. 
Сама БД собирается из файлов csv с помощью скрипта Python.

Для повышения скорости отработки скрипта, а также для лучшей читаемости использовала CTE. Далее кратко о каждом табличном выражении:
В courses_info я получаю id курса, его название и дату старта из таблицы courses; id, название и тип предмета - из таблицы subjects; id и название типа курса, а также количество уроков в месяц - из таблицы course_types. Использовала внутреннее соединение, т.к. в БД нет курсов, для которых не указаны предмет и тип предмета. 
В users_info я получаю id и фамилию ученика - из таблицы users; id и название города ученика - из таблицы cities; наличие/отсутствие факта отчисления и дату открытия курса ученику - из таблицы course_users. При соединении таблицы пользователей с таблицами городов и ролей пользователей использовала левое соединение, т.к. в базе не для всех пользователей указаны города. Также использовала фильтр по названию роли, чтобы оставить данные только об учениках.
В homework_info я получаю число сданных домашних заданий каждого ученика на каждом курсе. Для этого объединяю таблицы homework_done, homework_lessons и lessons, подсчитываю id сданных домашних работ и выполняю группировку и сортировку по пользователям и по курсам, полученных в courses_info и users_info. Оба соединения внутренние, потому что в данной нам базе нет домашних заданий, не привязанных к урокам и наоборот.
В результирующем запросе я объединяю данные из всех трёх табличных выражений и рассчитываю количество полных месяцев курса, открытых у ученика, как результат целочисленного деления поля «Число открытых уроков» на поле «Число уроков в месяц на курсе».
